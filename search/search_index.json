{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Zor: An Open-Source Claude Code-like Tool","text":"<p>Powerful AI assistance for your codebase</p>"},{"location":"#what-is-zor","title":"What is Zor?","text":"<p>Zor is an open-source command-line tool that brings AI-powered code assistance directly to your terminal. Inspired by tools like Claude Code, Zor helps developers understand, modify, and improve their codebases through natural language interactions.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Contextual Code Understanding: Zor analyzes your entire codebase to provide relevant answers and suggestions</li> <li>Interactive Mode: Have ongoing conversations about your code</li> <li>File Editing: Edit files using natural language instructions</li> <li>Test Generation: Automatically create unit tests for your code</li> <li>Refactoring: Implement complex refactoring across multiple files</li> <li>Git Integration: Commit changes directly through Zor</li> </ul>"},{"location":"#quick-demo","title":"Quick Demo","text":""},{"location":"#tech-stack","title":"Tech Stack","text":"<ul> <li>Python: Core language (3.9+)</li> <li>Gemini API: Powers AI code understanding and generation</li> <li>Typer: Command-line interface framework</li> <li>Rich: Beautiful terminal output formatting</li> <li>Google GenerativeAI: Client library for Gemini models</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#installation","title":"Installation","text":"<pre><code>pip install zor\n</code></pre> <p>Or install from source:</p> <pre><code>git clone https://github.com/arjuuuuuunnnnn/zor.git\ncd zor\npip install -e .\n</code></pre>"},{"location":"#setup-guide","title":"Setup Guide","text":"<ol> <li>Get a Gemini API Key:</li> <li>Visit Google AI Studio</li> <li> <p>Create an account and generate an API key</p> </li> <li> <p>Configure Zor:    <code>bash    zor setup</code></p> </li> <li> <p>Enter your Gemini API key when prompted</p> </li> <li> <p>Verify Installation:    <code>bash    zor help</code></p> </li> </ol>"},{"location":"#available-commands","title":"Available Commands","text":"Command Description <code>zor ask</code> Ask about your codebase <code>zor init</code> Create a new project with Zor <code>zor edit</code> Edit a file with natural language <code>zor commit</code> Create a git commit <code>zor interactive</code> Start an interactive session <code>zor history</code> View conversation history <code>zor generate_test</code> Generate tests for a file <code>zor refactor</code> Refactor code across multiple files <code>zor config</code> View or update configuration <code>zor setup</code> Configure your Gemini API key <code>zor help</code> Show available commands"},{"location":"#detailed-usage","title":"Detailed Usage","text":""},{"location":"#asking-about-your-code","title":"Asking About Your Code","text":"<pre><code>zor ask \"How does the rate limiting work in this codebase?\"\n</code></pre>"},{"location":"#editing-files","title":"Editing Files","text":"<pre><code>zor edit path/to/file.py \"Add error handling for network failures\"\n</code></pre>"},{"location":"#interactive-mode","title":"Interactive Mode","text":"<pre><code>zor interactive\n</code></pre>"},{"location":"#create-or-initialize-new-project","title":"Create or Initialize new project","text":"<pre><code>zor init \"create a modern React portfolio app for a software engineer with dark theme\"\n</code></pre>"},{"location":"#to-know-more-about-a-command","title":"To know more about a command","text":"<pre><code>zor &lt;command&gt; --help\n</code></pre>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions of all kinds! See our Contributing Guide for more details.</p>"},{"location":"#license","title":"License","text":"<p>Zor is licensed under the MIT License.</p>"},{"location":"#contact-support","title":"Contact &amp; Support","text":"<ul> <li>GitHub Issues: For bug reports and feature requests</li> <li>Email: arjunbanur27@gmail.com</li> </ul>"},{"location":"commands/","title":"Zor Command Guide","text":"<p>This document provides detailed information about each command available in Zor.</p>"},{"location":"commands/#core-commands","title":"Core Commands","text":""},{"location":"commands/#zor-ask","title":"<code>zor ask</code>","text":"<p>Ask questions about your codebase with contextual awareness.</p> <pre><code>zor ask \"How does rate limiting work in this project?\"\n</code></pre> <p>Options: None</p>"},{"location":"commands/#zor-init","title":"<code>zor init</code>","text":"<p>Create a new project based on natural language instructions.</p> <pre><code>zor init \"create a modern React portfolio app for a software engineer with dark theme\"```\n**Arguments**: \n- `--directory` : Specify the directory name for the new project\n\n### `zor edit`\n\nEdit a file based on natural language instructions.\n\n```bash\nzor edit path/to/file.py \"Add error handling for network failures\"\n</code></pre> <p>Arguments: - <code>file_path</code>: Path to the file to edit - <code>prompt</code>: Description of the changes to make</p> <p>Zor will: 1. Show a diff of proposed changes 2. Ask for confirmation 3. Create a backup of the original file</p>"},{"location":"commands/#zor-interactive","title":"<code>zor interactive</code>","text":"<p>Start an interactive session with Zor.</p> <pre><code>zor interactive\n</code></pre> <p>This mode allows for back-and-forth conversation about your codebase. You can: - Ask questions - Request code explanations - Edit files - Generate code</p> <p>Type <code>exit</code> to end the session.</p>"},{"location":"commands/#zor-generate_test","title":"<code>zor generate_test</code>","text":"<p>Generate unit tests for a specific file.</p> <pre><code>zor generate_test zor/api.py\n</code></pre> <p>Arguments: - <code>file_path</code>: Path to the file to test</p> <p>Options: - <code>--test-framework</code>: Specify the test framework (default: pytest)</p> <pre><code>zor generate_test zor/api.py --test-framework unittest\n</code></pre>"},{"location":"commands/#zor-refactor","title":"<code>zor refactor</code>","text":"<p>Refactor code across multiple files based on natural language instructions.</p> <pre><code>zor refactor \"Convert string concatenation to f-strings throughout the codebase\"\n</code></pre> <p>Arguments: - <code>prompt</code>: Description of the refactoring to perform</p> <p>Zor will: 1. Identify affected files 2. Show a summary of changes 3. Display diffs for each file 4. Ask for confirmation 5. Optionally create a git commit</p>"},{"location":"commands/#configuration-commands","title":"Configuration Commands","text":""},{"location":"commands/#zor-setup","title":"<code>zor setup</code>","text":"<p>Configure your Gemini API key.</p> <pre><code>zor setup\n</code></pre> <p>This interactive command will: 1. Prompt for your API key 2. Validate the key 3. Save it to your configuration</p>"},{"location":"commands/#zor-config","title":"<code>zor config</code>","text":"<p>View or update configuration settings.</p> <pre><code># View all settings\nzor config\n\n# View a specific setting\nzor config model\n\n# Update a setting\nzor config temperature 0.7\n</code></pre> <p>Arguments (all optional): - <code>key</code>: Configuration key to view or update - <code>value</code>: New value for the specified key</p>"},{"location":"commands/#utility-commands","title":"Utility Commands","text":""},{"location":"commands/#zor-commit","title":"<code>zor commit</code>","text":"<p>Create a git commit with a specified message.</p> <pre><code>zor commit \"Fix rate limiting in API module\"\n</code></pre> <p>Arguments: - <code>message</code>: Commit message</p>"},{"location":"commands/#zor-history","title":"<code>zor history</code>","text":"<p>Show conversation history with Zor.</p> <pre><code>zor history\n</code></pre> <p>Options: - <code>--limit</code>: Number of history items to show (default: 5)</p> <pre><code>zor history --limit 10\n</code></pre>"},{"location":"commands/#zor-help","title":"<code>zor help</code>","text":"<p>Display available commands and their descriptions.</p> <pre><code>zor help\n</code></pre>"},{"location":"commands/#tips-for-effective-use","title":"Tips for Effective Use","text":"<ol> <li>Be specific in your prompts:</li> <li>Good: \"Add input validation to the edit_file function in file_ops.py\"</li> <li> <p>Less effective: \"Make the code better\"</p> </li> <li> <p>Start with interactive mode to get familiar with Zor's capabilities</p> </li> <li> <p>Use context in your questions:</p> </li> <li> <p>\"How does the rate limiting work in api.py?\" will give better results than      \"How does rate limiting work?\"</p> </li> <li> <p>Generate tests first when making significant changes to understand the current behavior</p> </li> <li> <p>Review diffs carefully before accepting changes</p> </li> </ol>"},{"location":"guide/","title":"Zor User Guide","text":"<p>This guide provides detailed instructions for using Zor effectively in your development workflow.</p>"},{"location":"guide/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Installation</li> <li>Configuration</li> <li>Basic Usage</li> <li>Advanced Features</li> <li>Customization</li> <li>Troubleshooting</li> </ul>"},{"location":"guide/#installation","title":"Installation","text":""},{"location":"guide/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.9 or higher</li> <li>A Gemini API key from Google AI Studio</li> </ul>"},{"location":"guide/#install-from-pypi","title":"Install from PyPI","text":"<pre><code>pip install zor\n</code></pre>"},{"location":"guide/#install-from-source","title":"Install from Source","text":"<pre><code>git clone https://github.com/arjuuuuuunnnnn/zor.git\ncd zor\npip install -e .\n</code></pre>"},{"location":"guide/#configuration","title":"Configuration","text":""},{"location":"guide/#initial-setup","title":"Initial Setup","text":"<pre><code>zor setup\n</code></pre> <p>Enter your Gemini API key when prompted. This will: 1. Validate your API key 2. Save it in your global configuration 3. Add it to your local <code>.env</code> file</p>"},{"location":"guide/#configuration-options","title":"Configuration Options","text":"<p>You can view and modify configuration settings using:</p> <pre><code>zor config\n</code></pre> <p>Key configuration options:</p> <ul> <li><code>model</code>: The Gemini model to use (default: gemini-2.0-flash)</li> <li><code>temperature</code>: Response creativity (0.0-1.0, lower is more focused)</li> <li><code>max_tokens</code>: Maximum output length</li> <li><code>exclude_dirs</code>: Directories to ignore when scanning codebase</li> <li><code>exclude_files</code>: File patterns to ignore</li> <li><code>backup_files</code>: Whether to create backups before editing files</li> </ul> <p>Example configuration update:</p> <pre><code>zor config temperature 0.7\n</code></pre>"},{"location":"guide/#basic-usage","title":"Basic Usage","text":""},{"location":"guide/#asking-questions","title":"Asking Questions","text":"<pre><code>zor ask \"Explain how the context scanning works in this project\"\n</code></pre> <p>Zor will analyze your codebase and provide a contextually aware answer.</p>"},{"location":"guide/#interactive-mode","title":"Interactive Mode","text":"<pre><code>zor interactive\n</code></pre> <p>This mode allows ongoing conversation with Zor about your codebase. Type <code>exit</code> to quit.</p>"},{"location":"guide/#editing-files","title":"Editing Files","text":"<pre><code>zor edit path/to/file.py \"Add parameter validation to the main function\"\n</code></pre> <p>Zor will: 1. Show a diff preview of changes 2. Ask for confirmation 3. Apply the changes (creating a backup if configured)</p>"},{"location":"guide/#creating-new-project-with-zor","title":"Creating New Project with Zor","text":"<pre><code>zor init \"create a modern React portfolio app for a software engineer with dark theme\"\n</code></pre> <p>Zor will: 1. Create entire project structures with just a description 2. Analyzes your requirements and determines the appropriate project type, technologies, and architecture 3. Creates all necessary files with functional code and appropriate documentation 4. Extracts relevant project names from your description (or lets you specify one) 5. Warns before overwriting existing directories</p>"},{"location":"guide/#advanced-features","title":"Advanced Features","text":""},{"location":"guide/#generating-tests","title":"Generating Tests","text":"<pre><code>zor generate_test zor/api.py\n</code></pre> <p>Zor will analyze the file and create appropriate unit tests. You can specify the testing framework:</p> <pre><code>zor generate_test zor/api.py --test-framework unittest\n</code></pre>"},{"location":"guide/#code-refactoring","title":"Code Refactoring","text":"<pre><code>zor refactor \"Convert all print statements to logging calls\"\n</code></pre> <p>This powerful command will: 1. Identify files that need changes 2. Show a summary of planned modifications 3. Display detailed diffs for each file 4. Apply changes after confirmation 5. Optionally create a git commit</p>"},{"location":"guide/#git-integration","title":"Git Integration","text":"<p>After making changes, commit directly:</p> <pre><code>zor commit \"Improve error handling in API module\"\n</code></pre>"},{"location":"guide/#customization","title":"Customization","text":""},{"location":"guide/#project-specific-configuration","title":"Project-Specific Configuration","text":"<p>Create a <code>.zor_config.json</code> file in your project root to override global settings:</p> <pre><code>{\n  \"model\": \"gemini-2.0-pro\",\n  \"temperature\": 0.4,\n  \"exclude_dirs\": [\"node_modules\", \".venv\", \"venv\", \".git\", \"dist\", \"build\"],\n  \"exclude_files\": [\".env\", \"*.pyc\", \"*.jpg\", \"*.png\", \"*.pdf\"]\n}\n</code></pre>"},{"location":"guide/#context-filtering","title":"Context Filtering","text":"<p>Customize which files are included in the context by modifying the <code>exclude_dirs</code> and <code>exclude_files</code> settings.</p>"},{"location":"guide/#troubleshooting","title":"Troubleshooting","text":""},{"location":"guide/#api-key-issues","title":"API Key Issues","text":"<p>If you receive authentication errors: 1. Check that your API key is valid 2. Run <code>zor setup</code> to reconfigure your key 3. Verify the key is properly saved in your <code>.env</code> file</p>"},{"location":"guide/#rate-limiting","title":"Rate Limiting","text":"<p>If you encounter rate limit errors: 1. Wait a few moments before trying again 2. Consider using a different Gemini model 3. Adjust the <code>rate_limit_retries</code> configuration </p>"},{"location":"guide/#command-failures","title":"Command Failures","text":"<p>For unexpected errors: 1. Check your Python version (requires 3.9+) 2. Verify all dependencies are installed 3. Check for conflicting global configurations</p> <p>For persistent issues, please open an issue on GitHub.</p>"},{"location":"guide/#tips-and-best-practices","title":"Tips and Best Practices","text":"<ol> <li>Be specific in your prompts for better results</li> <li>Use interactive mode for complex tasks that require multiple steps</li> <li>Review all changes before applying them</li> <li>Create backups of important files when making significant changes</li> <li>Start small when using refactoring features</li> </ol>"}]}